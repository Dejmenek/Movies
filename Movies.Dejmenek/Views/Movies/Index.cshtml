@using Movies.Dejmenek.Enums
@model MovieGenreViewModel

@{
    ViewData["Title"] = "Index";
}
<div class="my-4">
    <a class="btn-lg bg-primary text-black" asp-action="Create">Create New</a>
</div>

<form class="row row-cols-lg-auto align-items-center" asp-controller="Movies" asp-action="Index" method="get">
    <div class="col-md">
        <label class="form-label text-secondary" asp-for="MovieGenre">Genre:</label>
        <select class="form-select text-black" asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>
    </div>

    <div class="col-md">
        <label class="form-label text-secondary" asp-for="MovieRating">Rating:</label>
        <select class="form-select text-black" asp-for="MovieRating" asp-items="Model.Ratings">
            <option value="">All</option>
        </select>
    </div>

    <div class="col-md">
        <label class="form-label text-secondary" asp-for="SortOption">Sort by:</label>
        <select class="form-select text-black" asp-for="SortOption" asp-items="Html.GetEnumSelectList<SortOptions>()">
        </select>
    </div>
    
    <div class="col-md">
        <label class="text-secondary form-label" asp-for="SearchString">Title:</label>
        <input class="form-control text-black" type="text" asp-for="SearchString" />
    </div>
    <div class="col-md">
        <input class="btn bg-primary text-black border-0" type="submit" value="Filter" />
    </div>
    <div class="col-md">
        <a asp-action="Index" class="btn btn-default">Clear filters</a>
    </div>
</form>
@if(Model.Movies.Any())
{
    <div class="container my-5">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-4 g-4">
            @foreach (var item in Model.Movies!)
            {
                <div class="col">
                    <div class="card border-0">
                        <img src="@(Url.Content(item.ImageUri ?? "~/img/placeholder.jpg"))" class="card-img-top" alt="Movie poster for @item.Title" loading="lazy" style="height: 300px; object-fit: cover"/>
                        <div class="card-body bg-primary">
                            <div class="d-flex justify-content-between flex-wrap">
                                <h4 class="card-title text-black">@Html.DisplayFor(modelItem => item.Title)</h4>
                                <p class="card-text text-black">@Html.DisplayFor(modelItem => item.Price)</p>
                            </div>
                            <p class="text-black fs-6">@Html.DisplayFor(modelItem => item.Rating) / @Html.DisplayFor(modelItem => item.Genre) / @Html.DisplayFor(modelItem => item.ReleaseDate)</p>
                            <a asp-action="Edit" asp-route-id="@item.Id"><img src="~/img/Edit_fill.svg" alt="Edit" /></a>
                            <a asp-action="Details" asp-route-id="@item.Id"><img src="~/img/File_dock_search.svg" alt="Details" /></a>
                            <a asp-action="Delete" asp-route-id="@item.Id"><img src="~/img/Trash.svg" alt="Delete" /></a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    var prevDisabled = !Model.Movies.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Movies.HasNextPage ? "disabled" : "";

    <ul class="pagination justify-content-center">
        <li class="page-item @prevDisabled">
            <a asp-action="Index"
            asp-route-movieGenre="@Model.MovieGenre"
            asp-route-movieRating="@Model.MovieRating"
            asp-route-sortOption="@((int)Model.SortOption)"
            asp-route-pageNumber="@(Model.Movies.PageIndex - 1)"
            aria-label="Previous"
            class="page-link">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>

        @for (int pageIndex = 1; pageIndex <= Model.Movies.TotalPages; pageIndex++)
        {
            <li class="page-item @(pageIndex == Model.Movies.PageIndex ? "active" : "")">
                <a asp-action="Index"
                asp-route-movieGenre="@Model.MovieGenre"
                asp-route-movieRating="@Model.MovieRating"
                asp-route-sortOption="@((int)Model.SortOption)"
                asp-route-pageNumber="@(pageIndex)"
                class="page-link">
                    @pageIndex
                </a>
            </li>
        }

        <li class="page-item @nextDisabled">
                <a asp-action="Index"
                asp-route-movieGenre="@Model.MovieGenre"
                asp-route-movieRating="@Model.MovieRating"
                asp-route-sortOption="@((int)Model.SortOption)"
                asp-route-pageNumber="@(Model.Movies.PageIndex + 1)"
                aria-label="Next"
                class="page-link">
                    <span aria-hidden="true">&raquo;</span>
                </a>
        </li>
    </ul>
} else
{
    <p class="text-secondary text-center fs-3 mt-4">No movies found</p>
}
